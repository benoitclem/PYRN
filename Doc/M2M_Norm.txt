================================
	Tit - Normalisation M2M
	Ver - 0.1
	Aut - Clem
================================

Attention au types et aux tailles
Par exemple:
- pinh = 3 = 0x3 et non pas
- pinh = "3" = 51,
- addrSrc = 500 = 0x1f4
- speed = "500"

================================
==     PRODUCT => SERVER      ==
================================

typedef struct _frameHdr {
	char imei[15];		// 15
	char idCfg[10]; 	// 10
	uint32_t time;  	// 4
} frameHdr;

typedef struct data{ 
	uint8_t sensorType; // 1
	uint16_t dataLen;   // 2
	char Data[];		// n [1-2^16]
}

ex:
WHAT||		header				|          data          |
SIZE||     15        |    10    | 4  |1| 2|  n |1| 2|  n |
DATA||012345678901234|abcdefghij|....|1|..|xxxx|2|..|xxxx|

================================
==     SERVER => PRODUCT      ==
================================

#define CMD_END			0
#define CMD_ACK			1
#define CMD_KEEP_ALIVE	2
#define CMD_NORM		3
#define CMD_DIAG_START	4

typedef struct _CANDiagCalculatorHeader {
	uint8_t					hdrVer;		// 1 
	uint8_t 				diagCode;	// 1
	uint16_t 				speed;		// 2
	uint32_t				addrSrc;	// 4
	uint32_t				addrDst;	// 4
	uint8_t					pinh;		// 1
	uint8_t					pinl;		// 1
	uint16_t				cmdLen;		// 2
}__attribute__((packed)) CANDiagCalculatorHeader;

typedef struct _CANDiagCommandHeader {
	uint16_t	type;					// 2
	uint8_t 	size;					// 1
	char 		cmd[];					// n [1-2^8]
}__attribute__((packed)) CANDiagCommandHeader;

ex:
WHAT||	       header        |   ACK   |   KEEP  |   CMD1  |   CMD2  |ED|
SIZE||1|1| 2|  4 |  4 |1|1| 2| 2|1|  n | 2|1|  n | 2|1|  n | 2|1|  n | 2|
DATA||1|6|..|6666|7777|3|8|..|01|.|xxxx|02|.|xxxx|03|.|xxxx|03|.|xxxx|00|

================================
	END
================================

